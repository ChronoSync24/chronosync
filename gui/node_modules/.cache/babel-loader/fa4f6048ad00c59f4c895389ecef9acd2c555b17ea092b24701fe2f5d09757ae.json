{"ast":null,"code":"const API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\nif (!API_BASE_URL) {\n  throw new Error('REACT_APP_API_BASE_URL is not defined in the environment variables.');\n}\nconst getAuthToken = () => {\n  return localStorage.getItem('authToken');\n};\nexport const apiClient = async (endpoint, {\n  body,\n  ...options\n} = {}) => {\n  const url = `${API_BASE_URL}${endpoint}`;\n  const token = getAuthToken();\n  const headers = {\n    'Content-Type': 'application/json',\n    ...(token && {\n      Authorization: `Bearer ${token}`\n    }),\n    ...options.headers\n  };\n  const response = await fetch(url, {\n    ...options,\n    headers,\n    body: body ? typeof body === 'string' ? body : JSON.stringify(body) : undefined\n  });\n  if (!response.ok) {\n    const error = await response.text();\n    throw new Error(`API Error: ${response.status} - ${error}`);\n  }\n  return response.json();\n};","map":{"version":3,"names":["API_BASE_URL","process","env","REACT_APP_API_BASE_URL","Error","getAuthToken","localStorage","getItem","apiClient","endpoint","body","options","url","token","headers","Authorization","response","fetch","JSON","stringify","undefined","ok","error","text","status","json"],"sources":["D:/Projects/ChronoSync/services/chronosync-fe/src/utils/ApiClient.ts"],"sourcesContent":["const API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\r\n\r\nif (!API_BASE_URL) {\r\n\tthrow new Error('REACT_APP_API_BASE_URL is not defined in the environment variables.');\r\n}\r\n\r\nexport interface ApiRequestOptions extends Omit<RequestInit, 'body'> {\r\n\tbody?: Record<string, any> | string;\r\n}\r\n\r\nconst getAuthToken = (): string | null => {\r\n\treturn localStorage.getItem('authToken');\r\n};\r\n\r\nexport const apiClient = async <T>(endpoint: string, { body, ...options }: ApiRequestOptions = {}): Promise<T> => {\r\n\tconst url = `${API_BASE_URL}${endpoint}`;\r\n\r\n\tconst token = getAuthToken();\r\n\r\n\tconst headers = {\r\n\t\t'Content-Type': 'application/json',\r\n\t\t...(token && { Authorization: `Bearer ${token}` }),\r\n\t\t...options.headers,\r\n\t};\r\n\r\n\tconst response = await fetch(url, {\r\n\t\t...options,\r\n\t\theaders,\r\n\t\tbody: body ? (typeof body === 'string' ? body : JSON.stringify(body)) : undefined,\r\n\t});\r\n\r\n\tif (!response.ok) {\r\n\t\tconst error = await response.text();\r\n\t\tthrow new Error(`API Error: ${response.status} - ${error}`);\r\n\t}\r\n\r\n\treturn response.json();\r\n};\r\n"],"mappings":"AAAA,MAAMA,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB;AAEvD,IAAI,CAACH,YAAY,EAAE;EAClB,MAAM,IAAII,KAAK,CAAC,qEAAqE,CAAC;AACvF;AAMA,MAAMC,YAAY,GAAGA,CAAA,KAAqB;EACzC,OAAOC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;AACzC,CAAC;AAED,OAAO,MAAMC,SAAS,GAAG,MAAAA,CAAUC,QAAgB,EAAE;EAAEC,IAAI;EAAE,GAAGC;AAA2B,CAAC,GAAG,CAAC,CAAC,KAAiB;EACjH,MAAMC,GAAG,GAAG,GAAGZ,YAAY,GAAGS,QAAQ,EAAE;EAExC,MAAMI,KAAK,GAAGR,YAAY,CAAC,CAAC;EAE5B,MAAMS,OAAO,GAAG;IACf,cAAc,EAAE,kBAAkB;IAClC,IAAID,KAAK,IAAI;MAAEE,aAAa,EAAE,UAAUF,KAAK;IAAG,CAAC,CAAC;IAClD,GAAGF,OAAO,CAACG;EACZ,CAAC;EAED,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAG,EAAE;IACjC,GAAGD,OAAO;IACVG,OAAO;IACPJ,IAAI,EAAEA,IAAI,GAAI,OAAOA,IAAI,KAAK,QAAQ,GAAGA,IAAI,GAAGQ,IAAI,CAACC,SAAS,CAACT,IAAI,CAAC,GAAIU;EACzE,CAAC,CAAC;EAEF,IAAI,CAACJ,QAAQ,CAACK,EAAE,EAAE;IACjB,MAAMC,KAAK,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;IACnC,MAAM,IAAInB,KAAK,CAAC,cAAcY,QAAQ,CAACQ,MAAM,MAAMF,KAAK,EAAE,CAAC;EAC5D;EAEA,OAAON,QAAQ,CAACS,IAAI,CAAC,CAAC;AACvB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}